{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "192G6LM-Tg4vUmawGZkSykjjXULiXYDDp",
      "authorship_tag": "ABX9TyOgTuAIPKLgMJm+YRUHwFyB",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yorii260/Aulas-CSHARP/blob/master/script.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BKjNAw6bIg1i",
        "outputId": "4ab88561-2623-498c-eb9b-716e7652331d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n",
            "==============================\n"
          ]
        }
      ],
      "source": [
        "import openpyxl\n",
        "from openpyxl.styles import Font\n",
        "\n",
        "\n",
        "xl = openpyxl.load_workbook('/content/drive/MyDrive/Resultado Final (NEW).xlsx')\n",
        "planinha = xl.active\n",
        "\n",
        "\n",
        "def calc_media(vp: int, vstf: int, cri: float | int):\n",
        "\n",
        "    inc = (vp+vstf)*cri/100\n",
        "\n",
        "    return round((vp+vstf+inc)/3, 1)\n",
        "\n",
        "\n",
        "\n",
        "duelos = [\n",
        "    [\"sunlight_skz\",\"marcus\"],\n",
        "    [\"polaris\", \"yorie.\"],\n",
        "    [\"._davi_\", \"samyyy\"],\n",
        "    [\"aoy\", \"larixzzz\"],\n",
        "    [\"dark deidara\", \"Slime\"],\n",
        "    [\"adao\", \"kiritor\"],\n",
        "    [\"munizblessed\", \"duuff\"],\n",
        "    [\"drac\", \"gallahad.\"],\n",
        "    [\"brunitobleiblede\", \"rhokaputt\"],\n",
        "    [\"juaogadod+\", \"tayyga\"],\n",
        "    [\"peralta\", \"livia\"]\n",
        "]\n",
        "\n",
        "\n",
        "class Calculator:\n",
        "\n",
        "    def __init__(self,\n",
        "                    participantes: str | list[str],\n",
        "                    public_votes: int | float | list,\n",
        "                    staff_votes: int,\n",
        "                    cards: list,\n",
        "                    criterios_inc: int):\n",
        "\n",
        "        self.participantes = participantes\n",
        "        self.public_votes = public_votes\n",
        "        self.staff_votes = staff_votes\n",
        "        self.criterios_inc = criterios_inc\n",
        "        self.cards = cards\n",
        "\n",
        "\n",
        "        self.menu()\n",
        "\n",
        "\n",
        "    def menu(self):\n",
        "\n",
        "        count = 2\n",
        "\n",
        "\n",
        "        for i in range(0, len(self.participantes)):\n",
        "\n",
        "            planinha[f'A{count}'] = self.participantes[i]\n",
        "            planinha[f'B{count}'] = self.cards[i]\n",
        "            planinha[f'C{count}'] = self.public_votes[i]\n",
        "            planinha[f'D{count}'] = self.staff_votes[i]\n",
        "            planinha[f'E{count}'] = f\"+{self.criterios_inc[i]}%\"\n",
        "\n",
        "            media = calc_media(self.public_votes[i], self.staff_votes[i], self.criterios_inc[i])\n",
        "\n",
        "            for pos, x in enumerate(self.participantes):\n",
        "\n",
        "              value = planinha[f\"F{pos+2}\"].value\n",
        "              name = planinha[f\"A{pos+2}\"].value\n",
        "\n",
        "              for x in range(0, int(len(self.participantes) / 2)):\n",
        "\n",
        "                duelo = duelos[x]\n",
        "\n",
        "                if duelo[0] == name:\n",
        "\n",
        "                  opponent = planinha[f\"F{self.participantes.index(duelo[1])+2}\"]\n",
        "                  current = planinha[f\"F{pos+2}\"]\n",
        "\n",
        "                  if opponent.value > current.value:\n",
        "\n",
        "                    opponent.font = Font(color='00228B22')\n",
        "                    current.font = Font(color='00FF0000')\n",
        "\n",
        "                  elif current.value > opponent.value:\n",
        "                    current.font = Font(color='00228B22')\n",
        "                    opponent.font = Font(color='00FF0000')\n",
        "\n",
        "                  else:\n",
        "                    pass\n",
        "\n",
        "\n",
        "            print(\"=\"*30)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "            planinha[f'F{count}'] = calc_media(self.public_votes[i], self.staff_votes[i], self.criterios_inc[i])\n",
        "            # //////////////////////////////////////////////////////////////////////////////////////////////////////////\n",
        "\n",
        "            count += 1\n",
        "\n",
        "        xl.save(\"/content/drive/MyDrive/Resultado Final (NEW).xlsx\")\n",
        "\n",
        "\n",
        "participantes = [\n",
        "    \"Slime\",\n",
        "    \"marcus\",\n",
        "    \"polaris\",\n",
        "    \"._davi_\",\n",
        "    \"yorie.\",\n",
        "    \"gallahad.\",\n",
        "    \"larixzzz\",\n",
        "    \"brunitobleiblede\",\n",
        "    \"adao\",\n",
        "    \"tayyga\",\n",
        "    \"lipw\",\n",
        "    \"sunlight_skz\",\n",
        "    \"munizblessed\",\n",
        "    \"duuff\",\n",
        "    \"aoy\",\n",
        "    \"kiritor\",\n",
        "    \"juaogadod+\",\n",
        "    \"drac\",\n",
        "    \"dark deidara\",\n",
        "    \"livia\",\n",
        "    \"samyyy\",\n",
        "    \"rhokaputt\",\n",
        "    \"peralta\"\n",
        "]\n",
        "\n",
        "cards  = [\n",
        "    \"Kitsunegasaki Amairo\",\n",
        "    \"Seele\",\n",
        "    \"Yoimiya\",\n",
        "    \"Nahida\",\n",
        "    \"Ai Hoshino\",\n",
        "    \"Shalltear Bloodfallen\",\n",
        "    \"Denji\",\n",
        "    \"Megumin\",\n",
        "    \"Himeno\",\n",
        "    \"Mitsuri Kanronji\",\n",
        "    \"Seele\",\n",
        "    \"Jojo\",\n",
        "    \"Mahito\",\n",
        "    \"Future Trunks\",\n",
        "    \"Delta\",\n",
        "    \"Monkey D. Luffy\",\n",
        "    \"Fischl\",\n",
        "    \"Ganyu\",\n",
        "    \"Megumin\",\n",
        "    \"Grimmjow Jeagerjaquez\",\n",
        "    \"Diluc\",\n",
        "    \"Rias Gremory\",\n",
        "    \"Sukuna\",\n",
        "]\n",
        "pv = [\n",
        "    14, # Slime\n",
        "    27, # Marcus\n",
        "    36, # polaris\n",
        "    36, # davi\n",
        "    12, # yorie\n",
        "    13, # galahad\n",
        "    39, # larixx\n",
        "    10, # brunitobleiblede\n",
        "    12  , # adao\n",
        "    28, # tayyga\n",
        "    12, # lipw - W/O\n",
        "    21, # sunlight\n",
        "    25, # muniz\n",
        "    12, # duuff\n",
        "    10, # aoy\n",
        "    36, #kiritor\n",
        "    14, # juaogadod+\n",
        "    36, # drac\n",
        "    32, # dark deidara\n",
        "    37, #livia\n",
        "    12, #samyy\n",
        "    36, #rhokaputt\n",
        "    12 #peralta\n",
        "]\n",
        "sv = [\n",
        "    sum([10,10,10,0]), # Kitsunegaki Amairo\n",
        "    sum([8,7,5,0]), # Seele (marcus)\n",
        "    sum([10,8,5,0]), # Yoimiya\n",
        "    sum([10,10,9,0]), # Nahida\n",
        "    sum([9,10,8,0]), # Ai Hoshino\n",
        "    sum([9,7,6,0]), # Shallter Bloodfallen\n",
        "    sum([7,8,8,0]), # Denji\n",
        "    sum([7,6,6,0]), # Megumin (Brunito)\n",
        "    sum([8,10,8,0]), # Himeno\n",
        "    sum([7,5,2,0]), # Mitsuri Kanronji\n",
        "    sum([9,10,6,0]), # Seele (lipw)\n",
        "    sum([7,10,4,0]), # Jojo\n",
        "    sum([4,5,3,0]), # Mahito\n",
        "    sum([4,5,2,0]), # Future Trunks\n",
        "    sum([10,10,5,0]), # Delta\n",
        "    sum([9,10,9,0]), # Luffy\n",
        "    sum([6,6,4,0]), # Fischl\n",
        "    sum([8,9,8,0]), # Ganyu\n",
        "    sum([9,10,10,0]), # Megumin (Deidara)\n",
        "    sum([7,10,7,0]), # Grimmjow Jeagerjaquez\n",
        "    sum([7,7,5,0]), # Diluc\n",
        "    sum([10,10,8,0]), # Rias Gremory\n",
        "    sum([5,6,6,0]), # Sukuna\n",
        "]\n",
        "criterios_inc = [\n",
        "    18, # Kitsunegasaki Amairo\n",
        "    15, # Seele (marcus)\n",
        "    18, # Yoimiya\n",
        "    18, # Nahida\n",
        "    18, # Ai Hoshino\n",
        "    15, # Shalltear Bloodfallen\n",
        "    15, # Denji\n",
        "    15, # Megumin (Brunito)\n",
        "    18, # Himeno\n",
        "    0, # Mitsuri Kanronji\n",
        "    15, # Seele (lipw)\n",
        "    18, # Jojo\n",
        "    0, # Mahito\n",
        "    0, # Future Trunks\n",
        "    15, # Delta\n",
        "    18, # Luffy\n",
        "    10, # Fischl\n",
        "    15, # Ganyu\n",
        "    18, # Megumin (Deidara)\n",
        "    15, # Grimmjow Jeagerjaquez\n",
        "    15, # Diluc\n",
        "    18, # Rias Gremory\n",
        "    10 # Sukuna\n",
        "]\n",
        "\n",
        "\n",
        "m = Calculator(participantes, pv, sv, cards, criterios_inc)"
      ]
    }
  ]
}